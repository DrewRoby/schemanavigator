# Generated by Django 5.1.7 on 2025-03-07 22:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('canonical_name', models.CharField(max_length=255)),
                ('schema_version', models.IntegerField(default=1)),
                ('source_type', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('other', 'Other')], default='csv', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SchemaChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_date', models.DateTimeField(auto_now_add=True)),
                ('change_type', models.CharField(choices=[('initial', 'Initial Version'), ('add_column', 'Add Column'), ('remove_column', 'Remove Column'), ('rename_column', 'Rename Column'), ('type_change', 'Column Type Change'), ('other', 'Other Change')], max_length=50)),
                ('details', models.JSONField()),
                ('previous_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_changes', to='tracker.datasource')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='tracker.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='SchemaDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detected_date', models.DateTimeField(auto_now_add=True)),
                ('column_definitions', models.JSONField()),
                ('row_count', models.IntegerField(default=0)),
                ('data_source', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schema', to='tracker.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryKeyCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=255)),
                ('uniqueness_ratio', models.FloatField()),
                ('is_confirmed', models.BooleanField(default=False)),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_keys', to='tracker.schemadefinition')),
            ],
        ),
        migrations.CreateModel(
            name='SchemaRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('version', 'Version Change'), ('related', 'Related Data'), ('derived', 'Derived Data'), ('other', 'Other Relationship')], max_length=50)),
                ('source_columns', models.JSONField(blank=True, null=True)),
                ('target_columns', models.JSONField(blank=True, null=True)),
                ('similarity_score', models.FloatField(default=0.0)),
                ('source_schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_relationships', to='tracker.schemadefinition')),
                ('target_schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_relationships', to='tracker.schemadefinition')),
            ],
        ),
    ]
